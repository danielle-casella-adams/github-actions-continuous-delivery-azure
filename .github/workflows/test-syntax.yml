name: Generate Linux Action Runner Image Workflow

on:
  push:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment: D or P'
        required: true
        default: 'D'
      region:
        description: 'Region: NA26 or NA27'
        required: true
        default: 'NA26'

env:
  RGRP: ${{ format('BDAIM-{0}-{1}-GitHubServices-RGRP', github.event.inputs.environment, github.event.inputs.region) }}

jobs:
  kickoff-packer:
    runs-on: [ubuntu-latest]
        
    steps:
      - name: Write out RGRP
        run: echo $RGRP

      - name: Create Install INSTALL_PASSWORD
        run: |
          pass=$(date +%s | sha256sum | base64 | head -c 32)
          echo "INSTALL_PASSWORD=${pass}" >> $GITHUB_ENV
          
      - name: Use env var
        run: |
          echo $INSTALL_PASSWORD
          
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Verify working directory
        run: pwd && ls

      - name: Show Packer Version
        run: echo "Packer Version $(packer --version)"

      - name: Post to Teams
        run: |
          echo "'$BUILD_STATUS' '$GITHUB_WORKFLOW' '$GITHUB_RUN_NUMBER' '$GITHUB_REPOSITORY' '$GITHUB_RUN_ID'"
          currentDate=$(printf '%(%m-%d-%Y %H:%M %p)T\n' -1)
          repo=$(echo $GITHUB_REPOSTIORY | xargs)
          teamsBody=$(jq . teams.json)
          teamsBody=${teamsBody//<%BUILD_STATUS%>/$BUILD_STATUS } 
          teamsBody=${teamsBody//<%DATE%>/$currentDate } 
          teamsBody=${teamsBody//<%GITHUB_WORKFLOW%>/$GITHUB_WORKFLOW } 
          teamsBody=${teamsBody//<%GITHUB_RUN_ID%>/$GITHUB_RUN_ID }
          teamsBody=${teamsBody//<%GITHUB_RUN_NUMBER%>/$GITHUB_RUN_NUMBER }
          teamsBody=${teamsBody//<%GITHUB_REPOSITORY%>/$repo } 
          echo $teamsBody
          
          curl -X POST -d "$teamsBody" ${{ secrets.TEAMS_URL }}
        env:
          BUILD_STATUS: ${{ job.status }}
          GITHUB_WORKFLOW: ${{ github.workflow }}
          GITHUB_RUN_NUMBER: ${{ github.run_number }}
          GITHUB_RUN_ID: ${{ github.run_id }}
          GITHUB_REPOSITORY: ${{ github.repository }}
          
          
          
          
